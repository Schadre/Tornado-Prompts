{"ast":null,"code":"var _jsxFileName = \"/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptBox = ({\n  data\n}) => {\n  _s();\n  const [currentPrompt, setCurrentPrompt] = useState(data);\n  const [feedback, setFeedback] = useState(null);\n  const handleAnswerClick = answer => {\n    if (answer.feedback) {\n      // Display feedback in the popup\n      setFeedback(answer.feedback);\n    } else if (answer.nextPrompt) {\n      // Move to the next prompt\n      setCurrentPrompt(answer.nextPrompt);\n      setFeedback(null); // Clear feedback\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PromptBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: currentPrompt.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentPrompt.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerClick(answer),\n          children: answer.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFeedback(null),\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptBox, \"VqjvhFSxpfmTEZ2FNxSYzzAiQXg=\");\n_c = PromptBox;\nexport default PromptBox;\nvar _c;\n$RefreshReg$(_c, \"PromptBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PromptBox","data","_s","currentPrompt","setCurrentPrompt","feedback","setFeedback","handleAnswerClick","answer","nextPrompt","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","index","onClick","text","_c","$RefreshReg$"],"sources":["/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport type Answer = {\n  text: string;\n  nextPrompt?: Prompt;\n  feedback?: string;\n};\n\nexport type Prompt = {\n  question: string;\n  answers: Answer[];\n};\n\ntype PromptBoxProps = {\n  data: Prompt;\n};\n\nconst PromptBox: React.FC<PromptBoxProps> = ({ data }) => {\n  const [currentPrompt, setCurrentPrompt] = useState(data);\n  const [feedback, setFeedback] = useState<string | null>(null);\n\n  const handleAnswerClick = (answer: Answer) => {\n    if (answer.feedback) {\n      // Display feedback in the popup\n      setFeedback(answer.feedback);\n    } else if (answer.nextPrompt) {\n      // Move to the next prompt\n      setCurrentPrompt(answer.nextPrompt);\n      setFeedback(null); // Clear feedback\n    }\n  };\n\n  return (\n    <div className=\"PromptBox\">\n      <h1>{currentPrompt.question}</h1>\n      <ul>\n        {currentPrompt.answers.map((answer, index) => (\n          <li key={index}>\n            <button onClick={() => handleAnswerClick(answer)}>{answer.text}</button>\n          </li>\n        ))}\n      </ul>\n      {feedback && (\n        <div className=\"feedback-popup\">\n          <p>{feedback}</p>\n          <button onClick={() => setFeedback(null)}>Continue</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PromptBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBxC,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAACI,IAAI,CAAC;EACxD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAE7D,MAAMU,iBAAiB,GAAIC,MAAc,IAAK;IAC5C,IAAIA,MAAM,CAACH,QAAQ,EAAE;MACnB;MACAC,WAAW,CAACE,MAAM,CAACH,QAAQ,CAAC;IAC9B,CAAC,MAAM,IAAIG,MAAM,CAACC,UAAU,EAAE;MAC5B;MACAL,gBAAgB,CAACI,MAAM,CAACC,UAAU,CAAC;MACnCH,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED,oBACEP,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EAAKR,aAAa,CAACS;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjCjB,OAAA;MAAAY,QAAA,EACGR,aAAa,CAACc,OAAO,CAACC,GAAG,CAAC,CAACV,MAAM,EAAEW,KAAK,kBACvCpB,OAAA;QAAAY,QAAA,eACEZ,OAAA;UAAQqB,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACC,MAAM,CAAE;UAAAG,QAAA,EAAEH,MAAM,CAACa;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADjEG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACJX,QAAQ,iBACPN,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BZ,OAAA;QAAAY,QAAA,EAAIN;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBjB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,IAAI,CAAE;QAAAK,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAjCIF,SAAmC;AAAAsB,EAAA,GAAnCtB,SAAmC;AAmCzC,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}