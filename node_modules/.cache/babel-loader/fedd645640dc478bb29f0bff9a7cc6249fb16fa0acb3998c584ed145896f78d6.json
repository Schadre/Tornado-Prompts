{"ast":null,"code":"var _jsxFileName = \"/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PromptBox = ({\n  data,\n  preparingHomePrompt\n}) => {\n  _s();\n  const [currentPrompt, setCurrentPrompt] = useState(data);\n  const [feedback, setFeedback] = useState(null);\n  const handleAnswerClick = answer => {\n    if (answer.feedback) {\n      // Display feedback in the popup\n      setFeedback(answer.feedback);\n    } else if (answer.nextPrompt) {\n      // Move to the next prompt\n      setCurrentPrompt(answer.nextPrompt);\n      setFeedback(null); // Clear feedback\n    } else {\n      // Handle the case when there's no next prompt but user wants to continue\n      setCurrentPrompt(preparingHomePrompt); // Set to the next prompt explicitly\n      setFeedback(null); // Clear feedback\n    }\n  };\n\n  if (!currentPrompt) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentPrompt.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), currentPrompt.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswerClick(answer),\n      children: answer.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setFeedback(null);\n          setCurrentPrompt(preparingHomePrompt);\n        },\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptBox, \"VqjvhFSxpfmTEZ2FNxSYzzAiQXg=\");\n_c = PromptBox;\nvar _c;\n$RefreshReg$(_c, \"PromptBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PromptBox","data","preparingHomePrompt","_s","currentPrompt","setCurrentPrompt","feedback","setFeedback","handleAnswerClick","answer","nextPrompt","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","index","onClick","text","_c","$RefreshReg$"],"sources":["/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ntype Answer = {\n  text: string;\n  nextPrompt?: Prompt;\n  feedback?: string;\n};\n\ntype Prompt = {\n  question: string;\n  answers: Answer[];\n};\n\ntype Props = {\n    data: Prompt;\n    preparingHomePrompt: Prompt;\n};\n  \nexport const PromptBox: React.FC<Props> = ({ data, preparingHomePrompt }) => {\n  const [currentPrompt, setCurrentPrompt] = useState<Prompt | null>(data);\n  const [feedback, setFeedback] = useState<string | null>(null);\n\n  const handleAnswerClick = (answer: Answer) => {\n    if (answer.feedback) {\n      // Display feedback in the popup\n      setFeedback(answer.feedback);\n    } else if (answer.nextPrompt) {\n      // Move to the next prompt\n      setCurrentPrompt(answer.nextPrompt);\n      setFeedback(null); // Clear feedback\n    } else {\n      // Handle the case when there's no next prompt but user wants to continue\n      setCurrentPrompt(preparingHomePrompt); // Set to the next prompt explicitly\n      setFeedback(null); // Clear feedback\n    }\n  };\n\n  if (!currentPrompt) return null;\n\n  return (\n    <div className=\"prompt-box\">\n      <p>{currentPrompt.question}</p>\n      {currentPrompt.answers.map((answer, index: number) => (\n        <button key={index} onClick={() => handleAnswerClick(answer)}>\n          {answer.text}\n        </button>\n      ))}\n      {feedback && (\n        <div className=\"feedback-popup\">\n          <p>{feedback}</p>\n          <button onClick={() => {\n            setFeedback(null);\n            setCurrentPrompt(preparingHomePrompt);\n          }}>Continue</button>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBxC,OAAO,MAAMC,SAA0B,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAgBI,IAAI,CAAC;EACvE,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAE7D,MAAMW,iBAAiB,GAAIC,MAAc,IAAK;IAC5C,IAAIA,MAAM,CAACH,QAAQ,EAAE;MACnB;MACAC,WAAW,CAACE,MAAM,CAACH,QAAQ,CAAC;IAC9B,CAAC,MAAM,IAAIG,MAAM,CAACC,UAAU,EAAE;MAC5B;MACAL,gBAAgB,CAACI,MAAM,CAACC,UAAU,CAAC;MACnCH,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACL;MACAF,gBAAgB,CAACH,mBAAmB,CAAC,CAAC,CAAC;MACvCK,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED,IAAI,CAACH,aAAa,EAAE,OAAO,IAAI;EAE/B,oBACEL,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBb,OAAA;MAAAa,QAAA,EAAIR,aAAa,CAACS;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9Bb,aAAa,CAACc,OAAO,CAACC,GAAG,CAAC,CAACV,MAAM,EAAEW,KAAa,kBAC/CrB,OAAA;MAAoBsB,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACC,MAAM,CAAE;MAAAG,QAAA,EAC1DH,MAAM,CAACa;IAAI,GADDF,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC,EACDX,QAAQ,iBACPP,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bb,OAAA;QAAAa,QAAA,EAAIN;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBlB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAM;UACrBd,WAAW,CAAC,IAAI,CAAC;UACjBF,gBAAgB,CAACH,mBAAmB,CAAC;QACvC,CAAE;QAAAU,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAxCWH,SAA0B;AAAAuB,EAAA,GAA1BvB,SAA0B;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}