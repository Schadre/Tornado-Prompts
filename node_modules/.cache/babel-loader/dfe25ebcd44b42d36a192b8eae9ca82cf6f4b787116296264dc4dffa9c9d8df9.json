{"ast":null,"code":"var _jsxFileName = \"/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PromptBox = ({\n  data\n}) => {\n  _s();\n  const [currentPrompt, setCurrentPrompt] = useState(data);\n  if (!currentPrompt) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentPrompt.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), currentPrompt.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentPrompt(answer.nextPrompt || null),\n      children: answer.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptBox, \"yxB0jnp1x7BDmdYwBG8MnlwBIdI=\");\n_c = PromptBox;\nvar _c;\n$RefreshReg$(_c, \"PromptBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PromptBox","data","_s","currentPrompt","setCurrentPrompt","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","answer","index","onClick","nextPrompt","text","_c","$RefreshReg$"],"sources":["/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ntype Answer = {\n  text: string;\n  nextPrompt?: Prompt;\n};\n\ntype Prompt = {\n  question: string;\n  answers: Answer[];\n};\n\ntype Props = {\n  data: Prompt;\n};\n\nexport const PromptBox: React.FC<Props> = ({ data }) => {\n  const [currentPrompt, setCurrentPrompt] = useState<Prompt | null>(data);\n\n  if (!currentPrompt) return null;\n\n  return (\n    <div className=\"prompt-box\">\n      <p>{currentPrompt.question}</p>\n      {currentPrompt.answers.map((answer, index: number) => (\n        <button key={index} onClick={() => setCurrentPrompt(answer.nextPrompt || null)}>\n          {answer.text}\n        </button>\n      ))}\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBxC,OAAO,MAAMC,SAA0B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAgBI,IAAI,CAAC;EAEvE,IAAI,CAACE,aAAa,EAAE,OAAO,IAAI;EAE/B,oBACEJ,OAAA;IAAKM,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBP,OAAA;MAAAO,QAAA,EAAIH,aAAa,CAACI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BR,aAAa,CAACS,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAa,kBAC/ChB,OAAA;MAAoBiB,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACU,MAAM,CAACG,UAAU,IAAI,IAAI,CAAE;MAAAX,QAAA,EAC5EQ,MAAM,CAACI;IAAI,GADDH,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAT,EAAA,CAfYF,SAA0B;AAAAmB,EAAA,GAA1BnB,SAA0B;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}