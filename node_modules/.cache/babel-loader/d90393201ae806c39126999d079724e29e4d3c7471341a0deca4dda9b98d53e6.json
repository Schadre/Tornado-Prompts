{"ast":null,"code":"var _jsxFileName = \"/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PromptBox = ({\n  data\n}) => {\n  _s();\n  const [currentPrompt, setCurrentPrompt] = useState(data);\n  const [feedback, setFeedback] = useState(null);\n  const handleAnswerClick = answer => {\n    if (answer.feedback) {\n      // Display feedback and clear it after a delay (e.g., 2000 milliseconds)\n      setFeedback(answer.feedback);\n      setTimeout(() => {\n        setFeedback(null);\n      }, 2000);\n    } else {\n      // Move to the next prompt and clear feedback\n      setCurrentPrompt(answer.nextPrompt || null);\n      setFeedback(null);\n    }\n  };\n  if (!currentPrompt) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentPrompt.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), currentPrompt.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswerClick(answer),\n      children: answer.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFeedback(null),\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptBox, \"VqjvhFSxpfmTEZ2FNxSYzzAiQXg=\");\n_c = PromptBox;\nvar _c;\n$RefreshReg$(_c, \"PromptBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PromptBox","data","_s","currentPrompt","setCurrentPrompt","feedback","setFeedback","handleAnswerClick","answer","setTimeout","nextPrompt","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","index","onClick","text","_c","$RefreshReg$"],"sources":["/Users/schadre/Desktop/tornado-prompts/src/PrompBox.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ntype Answer = {\n  text: string;\n  nextPrompt?: Prompt;\n  feedback?: string;\n};\n\ntype Prompt = {\n  question: string;\n  answers: Answer[];\n};\n\ntype Props = {\n  data: Prompt;\n};\n\nexport const PromptBox: React.FC<Props> = ({ data }) => {\n  const [currentPrompt, setCurrentPrompt] = useState<Prompt | null>(data);\n  const [feedback, setFeedback] = useState<string | null>(null);\n\n  const handleAnswerClick = (answer: Answer) => {\n    if (answer.feedback) {\n      // Display feedback and clear it after a delay (e.g., 2000 milliseconds)\n      setFeedback(answer.feedback);\n      setTimeout(() => {\n        setFeedback(null);\n      }, 2000);\n    } else {\n      // Move to the next prompt and clear feedback\n      setCurrentPrompt(answer.nextPrompt || null);\n      setFeedback(null);\n    }\n  };\n\n  if (!currentPrompt) return null;\n\n  return (\n    <div className=\"prompt-box\">\n      <p>{currentPrompt.question}</p>\n      {currentPrompt.answers.map((answer, index: number) => (\n        <button key={index} onClick={() => handleAnswerClick(answer)}>\n          {answer.text}\n        </button>\n      ))}\n      {feedback && (\n        <div className=\"feedback-popup\">\n          <p>{feedback}</p>\n          <button onClick={() => setFeedback(null)}>Continue</button>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBxC,OAAO,MAAMC,SAA0B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAgBI,IAAI,CAAC;EACvE,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAE7D,MAAMU,iBAAiB,GAAIC,MAAc,IAAK;IAC5C,IAAIA,MAAM,CAACH,QAAQ,EAAE;MACnB;MACAC,WAAW,CAACE,MAAM,CAACH,QAAQ,CAAC;MAC5BI,UAAU,CAAC,MAAM;QACfH,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL;MACAF,gBAAgB,CAACI,MAAM,CAACE,UAAU,IAAI,IAAI,CAAC;MAC3CJ,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,IAAI,CAACH,aAAa,EAAE,OAAO,IAAI;EAE/B,oBACEJ,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBb,OAAA;MAAAa,QAAA,EAAIT,aAAa,CAACU;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9Bd,aAAa,CAACe,OAAO,CAACC,GAAG,CAAC,CAACX,MAAM,EAAEY,KAAa,kBAC/CrB,OAAA;MAAoBsB,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACC,MAAM,CAAE;MAAAI,QAAA,EAC1DJ,MAAM,CAACc;IAAI,GADDF,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC,EACDZ,QAAQ,iBACPN,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bb,OAAA;QAAAa,QAAA,EAAIP;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBlB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC,IAAI,CAAE;QAAAM,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CApCWF,SAA0B;AAAAuB,EAAA,GAA1BvB,SAA0B;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}